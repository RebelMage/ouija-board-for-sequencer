{"name":"Get Token XY","type":"script","author":"ZhC8ATjW2zJWoMct","img":"icons/tools/hand/ruler-steel-grey.webp","scope":"global","command":"// Get Token\nlet token;\n\nif (canvas.tokens.controlled[0]===undefined){\n  ui.notifications.error(\"You must select a token!\");    \n} else {\n  token=canvas.tokens.controlled[0];\n  main();\n}\n\nasync function main() {\n  let message='';\n  let finalCode = `{ x: ${token.position.x}, y: ${token.position.y} }`;\n  \n  message += `<ul><li>X: <b style=\"color:red\">${token.position.x}</b></li>`;\n  message += `<li>Y: <b style=\"color:red\">${token.position.y}</b></li></ul>`;\n  \n  message += `<b style=\"color:red\" id=\"#tokenposition\">{ ${token.position.x}, ${token.position.y} }</p>`;\n  message += `<p>Copied to clipboard.</p>`;\n\n  \n\tlet template = message;\n\n\t/* view */\n\tlet form = `\n\t\t<label>Copy this</label>\n\t\t<textarea id=\"moduleTextArea\" rows=\"5\" cols=\"33\">${finalCode}</textarea>\n\t`;\n\n\tlet dialog = new Dialog({\n\t\ttitle: \"Token Data\",\n\t\tcontent: form,\n\t\tbuttons: {\n\t\t\tuse: {\n\t\t\t\tlabel: \"Copy to Clipboard\",\n\t\t\t\tcallback: () => {\n\t\t\t\t\tlet copyText = document.getElementById(\"moduleTextArea\"); /* Get the text field */\n\t\t\t\t\tcopyText.select(); /* Select the text field */\n\t\t\t\t\tdocument.execCommand(\"copy\"); /* Copy the text inside the text field */\n\t\t\t\t\tui.notifications.notify(`Saved on Clipboard`); /* Alert the copied text */\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}).render(true);\n}","folder":null,"sort":0,"permission":{"default":0,"ZhC8ATjW2zJWoMct":3},"flags":{"core":{"sourceId":"Macro.BPiwtfrQKcAcdsII"}},"_id":"inZbiZgyw9MtFDoK"}
{"name":"Ouija Board Control","type":"script","author":"ZhC8ATjW2zJWoMct","img":"icons/tools/scribal/lens-grey-brown.webp","scope":"global","command":"// ---------------------------\n// MAP\nconst letter_a = { x: 216.03773584905667, y: 450.00000000000006 }; // ok\nconst letter_b = { x: 283.01886792452837, y: 409.4339622641509 }; // ok\nconst letter_c = { x: 338.67924528301893, y: 382.0754716981132 }; // ok\nconst letter_d = { x: 395.28301886792457, y: 364.1509433962264 };\nconst letter_e = { x: 455.6603773584906, y: 351.8867924528302 };\nconst letter_f = { x: 510.377358490566, y: 336.79245283018867 }; // ok\nconst letter_g = { x: 572.6415094339623, y: 333.96226415094344 };\nconst letter_h = { x: 642.4528301886793, y: 333.01886792452837 };\nconst letter_i = { x: 697.1698113207547, y: 334.9056603773585 };\nconst letter_j = { x: 743.3962264150944, y: 343.3962264150944 };\nconst letter_k = { x: 810.377358490566, y: 358.49056603773596 };\nconst letter_l = { x: 871.6981132075472, y: 378.3018867924529 };\nconst letter_m = { x: 943.3962264150941, y: 408.49056603773596 };\nconst letter_n = { x: 1020.7547169811319, y: 445.2830188679247 };\nconst letter_o = { x: 239.62264150943395, y: 526.4150943396228 };\nconst letter_p = { x: 294.33962264150944, y: 498.11320754716996 }; // ok\nconst letter_q = { x: 359.433962264151, y: 473.58490566037756 };\nconst letter_r = { x: 422.6415094339623, y: 449.05660377358515 };\nconst letter_s = { x: 487.73584905660374, y: 433.9622641509436 }; // ok\nconst letter_t = { x: 546.2264150943395, y: 420.7547169811322 };\nconst letter_u = { x: 612.264150943396, y: 419.81132075471714 };\nconst letter_v = { x: 683.9622641509432, y: 419.81132075471714 };\nconst letter_w = { x: 767.9245283018865, y: 438.679245283019 };// ok\nconst letter_x = { x: 848.1132075471695, y: 463.2075471698115 };\nconst letter_y = { x: 914.1509433962261, y: 489.6226415094342 };\nconst letter_z = { x: 971.698113207547, y: 522.6415094339625 };\n\nconst number_1 = { x: 322.64150943396214, y: 600.9433962264153 };\nconst number_2 = { x: 378.3018867924527, y: 601.8867924528304 };\nconst number_3 = { x: 439.62264150943383, y: 600.9433962264153 };\nconst number_4 = { x: 504.7169811320754, y: 603.7735849056605 };\nconst number_5 = { x: 566.0377358490565, y: 600.0000000000002 };\nconst number_6 = { x: 627.3584905660376, y: 599.0566037735852 };\nconst number_7 = { x: 688.6792452830188, y: 597.169811320755 };\nconst number_8 = { x: 749.0566037735847, y: 599.0566037735853 };\nconst number_9 = { x: 808.4905660377357, y: 598.1132075471702 };\nconst number_0 = { x: 880.1886792452827, y: 597.169811320755 };\n\nconst symbol_yes = { x: 309.43396226415064, y: 228.30188679245316 };\nconst symbol_no = { x: 918.8679245283016, y: 229.24528301886835 };\n\nconst symbol_space = { x: 603.7735849056602, y: 233.96226415094372 };\n\nconst symbol_01 = { x: 639.9536577292289, y: 699.8675935120822 };\nconst symbol_02 = { x: 639.9536577292289, y: 699.8675935120822 };\nconst symbol_03 = { x: 639.9536577292289, y: 699.8675935120822 };\nconst symbol_04 = { x: 639.9536577292289, y: 699.8675935120822 };\nconst symbol_05 = { x: 639.9536577292289, y: 699.8675935120822 };\nconst symbol_06 = { x: 639.9536577292289, y: 699.8675935120822 };\n\n// ---------------------------\nconst version =  'v1.0';\nlet token;\nlet soundToPlay = 'worlds/incompleteadventurer/oija/distant-orchestra.ogg';\nlet animation = 'modules/animated-spell-effects-cartoon/spell-effects/cartoon/mix/electric_ball_CIRCLE_09.webm';\nlet debug = true;\n\n/* \n\nSource: \nIcon: \n*/\n\nif (canvas.tokens.controlled[0]===undefined){\n  ui.notifications.error(\"You must select a token!\");    \n} else {\n  token=canvas.tokens.controlled[0];\n  main();\n}\n\n\nfunction main() {\n  let alphabet = 'abcdefghijklmnopqrstuvwxyz0123456789'.split('');\n  let alphabetList = ``;\n  let special = 'yes,no'.split(',');\n  alphabet = alphabet.concat(special); \n  alphabet.map((t) => {\n    alphabetList += `<input type=\"radio\" id=\"${t}\" name=\"target\" value=\"${t}\"><label for=\"${t}\">${t} </label>`;\n  });\n\n  let template = `  \n    <style type=\"text/css\">\n      div.purpleHorizon {\n        border: 4px solid #ff0000;\n        background-color: #000000;\n        width: 100%;\n        text-align: center;\n        border-collapse: collapse;\n      }\n      .divTable.purpleHorizon .divTableCell, .divTable.purpleHorizon .divTableHead {\n        border: 0px solid #550000;\n        padding: 5px 2px;\n      }\n      .divTable.purpleHorizon .divTableBody .divTableCell {\n        font-size: 13px;\n        font-weight: bold;\n        color: #FFFFFF;\n      }\n      \n      .divTable{ display: table; }\n      .divTableRow { display: table-row; }\n      .divTableHeading { display: table-header-group;}\n      .divTableCell, .divTableHead { display: table-cell;}\n      .divTableHeading { display: table-header-group;}\n      .divTableFoot { display: table-footer-group;}\n      .divTableBody { display: table-row-group;}\n\n      /* RADIO */\n      [type=radio] { \n        background-color:white;      \n      }\n\n      /* IMAGE STYLES */\n      [type=radio] + img {\n      cursor: pointer;\n      }\n\n      /* CHECKED STYLES */\n      [type=radio]:checked + img {\n      outline: 4px solid #f00;\n      }\n      \n      .container {\n        position: relative;\n        text-align: center;\n        color: white;\n      }\n      /* Centered text */\n      .centered {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 18px;\n      }    \n\n      #kultcss .window-content {    \n        background: #000000;\n      }     \n      #kultcss .dialog-button {\n        height: 40px;\n        background: #000000;\n        color: #ffffff;\n        justify-content: space-evenly;\n        align-items: center;\n        cursor: pointer;\n        border: none;    \n      }  \n      #kultcss header {\n        background: #000000;\n        border-radius: 0;    \n        border: none;    \n        margin-bottom: 2px;\n        font-size: .75rem;\n      }\n    </style>    \n    \n    <div class=\"divTable purpleHorizon\">\n    <div class=\"divTableBody\">\n    \n    <div class=\"divTableRow\">\n    <div class=\"divTableCell\">\n        <p>WARNING: PLAYING WITH SPIRITS MAY HAVE OMINOUS CONSEQUENCES!</p>\n    </div>\n    </div>\n\n    <div class=\"divTableRow\">\n    <div class=\"divTableCell\">\n        <p>Message</p>\n        <input id=\"message\" type=\"text\" style=\"width: 320px; box-sizing: border-box;border: none;background-color: #ff0000;color: white; text-align: center;\" value=\"wasp\">       \n    </div>\n    </div>\n\n    <div class=\"divTableRow\">\n    <div class=\"divTableCell\">\n      <p>Choose instead of the message:</p>\n      <input type=\"radio\" id=\"position_yes\" name=\"extra_position\" value=\"message\" checked=\"checked>\n      <label for=\"support_0\">Message</label>      \n      <input type=\"radio\" id=\"position_yes\" name=\"extra_position\" value=\"position_yes\">\n      <label for=\"support_0\">Yes</label>\n      <input type=\"radio\" id=\"position_no\" name=\"extra_position\" value=\"position_no\">\n      <label for=\"support_1\">No</label>  \n      <input type=\"radio\" id=\"position_01\" name=\"extra_position\" value=\"position_01\">\n      <label for=\"support_1\">Extra 01</label>  \n      <input type=\"radio\" id=\"position_02\" name=\"extra_position\" value=\"position_02\">\n      <label for=\"support_1\">Extra 02</label>        \n      <input type=\"radio\" id=\"position_03\" name=\"extra_position\" value=\"position_03\">\n      <label for=\"support_1\">Extra 03</label>  \n      <input type=\"radio\" id=\"position_04\" name=\"extra_position\" value=\"position_04\">\n      <label for=\"support_1\">Extra 04</label>  \n      <input type=\"radio\" id=\"position_05\" name=\"extra_position\" value=\"position_05\">\n      <label for=\"support_1\">Extra 05</label>  \n      <input type=\"radio\" id=\"position_06\" name=\"extra_position\" value=\"position_06\">\n      <label for=\"support_1\">Extra 06</label>        \n    </div>\n    </div>\n\n    <div class=\"divTableRow\">\n    <div class=\"divTableCell\">\n      <label for=\"movetype\">Move Type: <select id=\"movetype\" style=\"width: 150px; box-sizing: border-box;border: none;background-color: #ff0000;color: white; text-align: center;\">\n      <option value=\"moveType1\">Type 1</option>\n      <option value=\"moveType2\">Type 2 - No Effects</option>\n      </select></label>\n    </div>\n    </div>\n\n    <div class=\"divTableRow\">\n    <div class=\"divTableCell\">\n        <label for=\"extraTime\">Delay (ms): \n        <input id=\"extraTime\" type=\"number\" min=1 max=5000 style=\"width: 80px; box-sizing: border-box;border: none;background-color: #ff0000;color: white; text-align: center;\" value=1></label>   \n    </div>\n    </div>\n\n    </div>\n    </div>    \n  `;\n\n  new Dialog({\n    title: `Ouija - ${version}`,\n    content: template,\n    buttons: {\n      ok: {\n        label: \"Move\",\n        callback: async (html) => {\n          moveThing(html);\n        },\n      },\n      cancel: {\n        label: \"Cancel\",\n      },\n    },\n  }).render(true);\n}\n\nasync function moveThing(html) {  \n  let msg = '';  \n  let letter = html.find('input[name=\"target\"]:checked').val();\n  const movetype = html.find('#movetype')[0].value;\n  let autoMessage =  html.find(\"#message\")[0].value;   \n  let extraTime =  html.find(\"#extraTime\")[0].value;   \n  let messageType = html.find('input[name=\"extra_position\"]:checked').val();\n  const moveFunction = await selectMoveFunction(movetype);\n\n  if ( messageType=='message' ) { // message\n    sendMessage(autoMessage.toLowerCase(), moveFunction, extraTime);\n  } else { // extra_position\n    sendToPosition(messageType.toLowerCase(), moveFunction, extraTime);\n  }\n}\n\nasync function move(position, extraTime=1) {\n  let sequence = new Sequence()  \n    .thenDo(async function(){\n      await token.document.update(position, { animate: true })\n    })\n    .wait(750)\n    .sound(soundToPlay)\n    .effect()\n      .file(animation)\n      .atLocation(token)\n      .scale(0.35)\n      .waitUntilFinished()\n    .wait(200)\n    .wait(extraTime);\n\n  await sequence.play();  \n}\n\nasync function move2(position, extraTime=1) {\n  let sequence = new Sequence()  \n    .thenDo(async function(){\n      await token.document.update(position, { animate: true })\n    })\n    .wait(750)\n    .sound(soundToPlay)\n    .wait(200)\n    .wait(extraTime);\n\n  await sequence.play();  \n}\n\n\nasync function sendMessage(text, moveFunction, extraTime=1) {\n  let message = text.split('');\n  \n  for (let index = 0; index < message.length; index++) {\n    const myMessage = message[index];\n    const output = await moveFunction(sceneMap(myMessage), extraTime);\n  }\n}\n\nasync function sendToPosition(text, moveFunction, extraTime=1) {\n  await moveFunction(sceneMap(text), extraTime);\n}\n\nasync function selectMoveFunction(moveType) {\n  if (moveType=='moveType1') {\n    return move;\n  } else if (moveType=='moveType2') {\n    return move2;\n  }\n}\n\n// ================================================================\nfunction sceneMap(message) {\n// canvas.tokens.controlled[0].position.x\n// canvas.tokens.controlled[0].position.y\n\n  // 1 char\n  switch (message) {\n    case 'a': return letter_a; // ok\n    case 'b': return letter_b; // ok\n    case 'c': return letter_c; // ok\n    case 'd': return letter_d;      \n    case 'e': return letter_e;\n    case 'f': return letter_f; // ok           \n    case 'g': return letter_g;      \n    case 'h': return letter_h;      \n    case 'i': return letter_i;      \n    case 'j': return letter_j;      \n    case 'k': return letter_k;      \n    case 'l': return letter_l;      \n    case 'm': return letter_m;      \n    case 'n': return letter_n;\n    case 'o': return letter_o;\n    case 'p': return letter_p; // ok\n    case 'q': return letter_q;\n    case 'r': return letter_r;\n    case 's': return letter_s; // ok\n    case 't': return letter_t;\n    case 'u': return letter_u;\n    case 'v': return letter_v;\n    case 'x': return letter_x;\n    case 'z': return letter_z;\n    case 'w': return letter_w; // ok\n    case 'y': return letter_y;     \n    case '0': return number_0;\n    case '1': return number_1;\n    case '2': return number_2;\n    case '3': return number_3;\n    case '4': return number_4;\n    case '5': return number_5;\n    case '6': return number_6;\n    case '7': return number_7;\n    case '8': return number_8;\n    case '9': return number_9;\n    case ' ': return symbol_space;    \n    case 'position_yes':  return symbol_yes;\n    case 'position_no':   return symbol_no;\n    case 'position_01':   return symbol_01;\n    case 'position_02':   return symbol_02;\n    case 'position_03':   return symbol_03;\n    case 'position_04':   return symbol_04;\n    case 'position_05':   return symbol_05;\n    case 'position_06':   return symbol_06;\n    default: ui.notifications.error(\"666!\");    \n  }\n\n}","folder":null,"sort":0,"permission":{"default":0,"ZhC8ATjW2zJWoMct":3},"flags":{"core":{"sourceId":"Macro.99v8LiO5NuiZ3b9h"}},"_id":"zSUcAsxiiSa2q8rS"}
